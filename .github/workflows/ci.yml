name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5'
#          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
#          - windows-latest
        arch:
          - x64
    steps:
      - name: Install Dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install build-essential curl libcurl4-openssl-dev csh m4
            wget http://www.mpich.org/static/downloads/3.3.2/mpich-3.3.2.tar.gz
            tar -xzf mpich-3.3.2.tar.gz
            cd mpich-3.3.2
            ./configure
            make
            sudo make install
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install gfortran tcsh mpich
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "Windows"
          fi
        shell: bash
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info